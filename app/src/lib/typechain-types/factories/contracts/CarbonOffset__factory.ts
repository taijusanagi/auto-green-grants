/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { CarbonOffset, CarbonOffsetInterface } from "../../contracts/CarbonOffset";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "purchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610299380380610299833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610182806101176000396000f3fe6080604052600436106100295760003560e01c806364edfbf01461002e57806366d003ac14610038575b600080fd5b610036610063565b005b34801561004457600080fd5b5061004d6100cc565b60405161005a9190610131565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156100c9573d6000803e3d6000fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061011b826100f0565b9050919050565b61012b81610110565b82525050565b60006020820190506101466000830184610122565b9291505056fea26469706673582212209f5bbfaff17021a071375c7fb76bcf24545fb9c2ae6e78e76baf889852e7ce1264736f6c63430008130033";

type CarbonOffsetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: CarbonOffsetConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class CarbonOffset__factory extends ContractFactory {
  constructor(...args: CarbonOffsetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<CarbonOffset> {
    return super.deploy(_recipient, overrides || {}) as Promise<CarbonOffset>;
  }
  override getDeployTransaction(
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_recipient, overrides || {});
  }
  override attach(address: string): CarbonOffset {
    return super.attach(address) as CarbonOffset;
  }
  override connect(signer: Signer): CarbonOffset__factory {
    return super.connect(signer) as CarbonOffset__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CarbonOffsetInterface {
    return new utils.Interface(_abi) as CarbonOffsetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CarbonOffset {
    return new Contract(address, _abi, signerOrProvider) as CarbonOffset;
  }
}
